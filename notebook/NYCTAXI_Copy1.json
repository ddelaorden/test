{
	"name": "NYCTAXI_Copy1",
	"properties": {
		"nbformat": 4,
		"nbformat_minor": 2,
		"bigDataPool": {
			"referenceName": "SampleSpark",
			"type": "BigDataPoolReference"
		},
		"sessionProperties": {
			"driverMemory": "56g",
			"driverCores": 8,
			"executorMemory": "56g",
			"executorCores": 8,
			"numExecutors": 2,
			"runAsWorkspaceSystemIdentity": false,
			"conf": {
				"spark.dynamicAllocation.enabled": "false",
				"spark.dynamicAllocation.minExecutors": "2",
				"spark.dynamicAllocation.maxExecutors": "2",
				"spark.autotune.trackingId": "5e2558bb-052b-4338-8b59-7b045803bc31"
			}
		},
		"metadata": {
			"saveOutput": true,
			"synapse_widget": {
				"version": "0.1",
				"state": {
					"a3876007-215f-43be-8fd0-4d0cb322b919": {
						"type": "Synapse.DataFrame",
						"sync_state": {
							"table": {
								"rows": [
									{
										"0": "1",
										"1": "2.9553852937285994",
										"2": "4624873.580000004"
									},
									{
										"0": "6",
										"1": "3.0823106614325835",
										"2": "187660.31999999998"
									},
									{
										"0": "3",
										"1": "3.124120509875713",
										"2": "274744.52999999985"
									},
									{
										"0": "5",
										"1": "3.1096431007047065",
										"2": "314624.3600000001"
									},
									{
										"0": "9",
										"1": "6.23",
										"2": "49.84"
									},
									{
										"0": "4",
										"1": "3.132080374155551",
										"2": "126570.49999999999"
									},
									{
										"0": "8",
										"1": "7.831666666666667",
										"2": "46.99"
									},
									{
										"0": "7",
										"1": "2.382",
										"2": "11.91"
									},
									{
										"0": "2",
										"1": "3.198328131230063",
										"2": "1026740.0899999997"
									},
									{
										"0": "0",
										"1": "2.936587699848291",
										"2": "50327.24000000001"
									}
								],
								"schema": [
									{
										"key": "0",
										"name": "passengerCount",
										"type": "int"
									},
									{
										"key": "1",
										"name": "AvgTripDistance",
										"type": "double"
									},
									{
										"key": "2",
										"name": "SumTripDistance",
										"type": "double"
									}
								],
								"truncated": false
							},
							"isSummary": false,
							"language": "scala"
						},
						"persist_state": {
							"view": {
								"type": "details",
								"chartOptions": {
									"chartType": "bar",
									"aggregationType": "sum",
									"categoryFieldKeys": [
										"1"
									],
									"seriesFieldKeys": [
										"0"
									],
									"isStacked": false
								}
							}
						}
					}
				}
			},
			"enableDebugMode": false,
			"kernelspec": {
				"name": "synapse_pyspark",
				"display_name": "Synapse PySpark"
			},
			"language_info": {
				"name": "python"
			},
			"a365ComputeOptions": {
				"id": "/subscriptions/aab15652-c938-4073-af8a-70635e111c18/resourceGroups/sdmadataplatform/providers/Microsoft.Synapse/workspaces/sdmaddemos/bigDataPools/SampleSpark",
				"name": "SampleSpark",
				"type": "Spark",
				"endpoint": "https://sdmaddemos.dev.azuresynapse.net/livyApi/versions/2019-11-01-preview/sparkPools/SampleSpark",
				"auth": {
					"type": "AAD",
					"authResource": "https://dev.azuresynapse.net",
					"authHeader": null
				},
				"sparkVersion": "2.4",
				"nodeCount": 3,
				"cores": 8,
				"memory": 56,
				"extraHeader": null
			},
			"sessionKeepAliveTimeout": 30
		},
		"cells": [
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"outputs_hidden": true
					}
				},
				"source": [
					"from azureml.opendatasets import NycTlcYellow\r\n",
					"\r\n",
					"from datetime import datetime\r\n",
					"from dateutil import parser\r\n",
					"\r\n",
					"end_date = parser.parse('2018-05-08 00:00:00')\r\n",
					"start_date = parser.parse('2018-05-01 00:00:00')\r\n",
					"\r\n",
					"nyc_tlc = NycTlcYellow(start_date=start_date, end_date=end_date)"
				],
				"attachments": null,
				"execution_count": 1
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"df_nyc_tlc.printSchema()"
				],
				"attachments": null,
				"execution_count": 2
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": false
				},
				"source": [
					"from pyspark.sql import functions as F\r\n",
					"df_nyc = df_nyc_tlc.groupBy(\"passengerCount\").agg(F.avg('tripDistance').alias('AvgTripDistance'), F.sum('tripDistance').alias('SumTripDistance'))\r\n",
					"display(df_nyc)"
				],
				"attachments": null,
				"execution_count": 3
			},
			{
				"cell_type": "code",
				"metadata": {
					"jupyter": {
						"source_hidden": false,
						"outputs_hidden": true
					},
					"nteract": {
						"transient": {
							"deleting": false
						}
					},
					"collapsed": true
				},
				"source": [
					"import matplotlib.pyplot\r\n",
					"import seaborn\r\n",
					"\r\n",
					"seaborn.set(style = \"whitegrid\")\r\n",
					"pdf_nyc = df_nyc.toPandas()\r\n",
					"seaborn.lineplot(x=\"passengerCount\", y=\"SumTripDistance\" , data = pdf_nyc)\r\n",
					"seaborn.lineplot(x=\"passengerCount\", y=\"AvgTripDistance\" , data = pdf_nyc)\r\n",
					"matplotlib.pyplot.show()"
				],
				"attachments": null,
				"execution_count": 4
			}
		]
	}
}